---

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${TAG}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ${PWD}/jaas/zookeeper.config:/etc/zookeeper/secrets/zookeeper-server-jaas.config
    environment:
        KAFKA_JMX_HOSTNAME: zookeeper
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        ZOOKEEPER_INIT_LIMIT: 10 # total init limit (INIT_LIMIT * TICK_TIME)
        ZOOKEEPER_SYNC_LIMIT: 4 # total sync limit  (SYNC_LIMIT * TICK_TIME)
        ZOOKEEPER_SERVER_ID: 1
        KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
          -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper-server-jaas.config
          -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
          -Dzookeeper.allowSaslFailedClients=false
          -Dzookeeper.requireClientAuthScheme=sasl

  broker:
    image:  confluentinc/cp-server:${TAG}
    hostname: broker
    container_name: broker
    ports:
      - "19092:19092"
      - "10091:10091"
    volumes:
      - ${PWD}/jaas/broker.config:/etc/kafka/secrets/kafka-client-jaas.config
    environment:
      KAFKA_BROKER_ID: 101
      # jmx
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_PORT: 10091
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,BROKER:PLAINTEXT,HOST:SASL_PLAINTEXT
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:SASL_PLAINTEXT,BROKER:SASL_PLAINTEXT,HOST:SASL_PLAINTEXT
      KAFKA_LISTENERS: DOCKER://:9092,BROKER://:9093,HOST://:19092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://broker:9092,BROKER://broker:9093,HOST://localhost:19092
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      # listener host
      KAFKA_LISTENER_NAME_HOST_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_HOST_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        user_admin="admin-secret" \ 
        user_alice="alice-secret" \ 
        user_bob="bob-secret" \ 
        user_chuck="chuck-secret";
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      # interesting features
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_TIER_METADATA_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT.SECURITY.EVENT.LOGGER.EXPORTER.KAFKA.TOPIC.REPLICAS: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
      KAFKA_SUPER_USERS: User:admin
      # security zookeeper
      KAFKA_OPTS: 
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka-client-jaas.config